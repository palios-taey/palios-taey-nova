#!/bin/bash
# Cleanup script for PALIOS-TAEY codebase
# Generated by Claude CTO on 2025-03-18

echo "Starting PALIOS-TAEY codebase cleanup..."

# Create archive directory if it doesn't exist
mkdir -p ./archive

# Archive backup files (*.bak)
echo "Archiving .bak files..."
find src -name "*.bak" -type f | while read file; do
  echo "  Moving $file to archive..."
  mkdir -p ./archive/$(dirname "$file")
  mv "$file" ./archive/"$file"
done

# Archive potential duplicate deployment scripts
echo "Archiving duplicate deployment scripts..."
for script in deploy_direct.sh deploy_fixed.sh deploy_simplified.sh deploy_minimal.sh deploy_hybrid.sh; do
  if [ -f "$script" ]; then
    echo "  Moving $script to archive..."
    mkdir -p ./archive/deployment_scripts
    mv "$script" ./archive/deployment_scripts/
  fi
done

# Archive obsolete configuration files
echo "Archiving obsolete configuration files..."
for file in setup_service_account.sh fix_environment_config.sh src/fix_environment_config.py archive_files.sh; do
  if [ -f "$file" ]; then
    echo "  Moving $file to archive..."
    mkdir -p ./archive/$(dirname "$file")
    mv "$file" ./archive/"$file"
  fi
done

# Archive files with .potential_duplicate extension
echo "Archiving files marked as potential duplicates..."
find . -name "*.potential_duplicate" -type f | while read file; do
  echo "  Moving $file to archive..."
  basename=$(basename "$file" .potential_duplicate)
  mkdir -p ./archive/potential_duplicates
  mv "$file" ./archive/potential_duplicates/
  
  # If the original file exists, move it too
  if [ -f "$basename" ]; then
    mv "$basename" ./archive/potential_duplicates/
  fi
done

# Archive .archived files
echo "Archiving files marked as archived..."
find . -name "*.archived" -type f | while read file; do
  echo "  Moving $file to archive..."
  mkdir -p ./archive/marked_as_archived
  mv "$file" ./archive/marked_as_archived/
done

echo "Cleanup completed!"
echo "All obsolete and duplicate files have been moved to the ./archive directory."
