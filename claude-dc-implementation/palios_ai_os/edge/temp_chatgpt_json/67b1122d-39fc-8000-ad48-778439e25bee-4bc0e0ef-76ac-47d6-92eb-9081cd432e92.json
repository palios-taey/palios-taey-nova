{"data_id": "67b1122d-39fc-8000-ad48-778439e25bee-4bc0e0ef-76ac-47d6-92eb-9081cd432e92", "content": ["{\"name\": \"firestore_schema_update\", \"type\": \"code/python\", \"content\": \"import firebase_admin\\nfrom firebase_admin import credentials, firestore\\n\\n# Path to the Firebase service account key JSON file\\nkey_file_path = r\\\"C:\\\\AI-Execution-System\\\\firebase_key.json\\\"\\n\\n# Initialize Firebase Admin SDK\\ncred = credentials.Certificate(key_file_path)\\nfirebase_admin.initialize_app(cred)\\n\\ndb = firestore.client()\\n\\n# Define the correct schema for each collection\\nschema_structure = {\\n    \\\"goals\\\": {\\n        \\\"name\\\": \\\"string\\\",\\n        \\\"tags\\\": \\\"array\\\",\\n        \\\"description\\\": \\\"string\\\",\\n        \\\"priority_level\\\": \\\"string\\\",\\n        \\\"timeframe\\\": \\\"string\\\",\\n        \\\"ai_strategy_notes\\\": \\\"string\\\",\\n        \\\"target_date\\\": \\\"date\\\",\\n        \\\"creation_date\\\": \\\"date\\\",\\n        \\\"last_modified\\\": \\\"date\\\",\\n        \\\"core_principles_values\\\": [\\\"principles\\\"],\\n        \\\"life_optimization\\\": [\\\"life_optimization\\\"],\\n        \\\"ai_workflows_experiments\\\": [\\\"ai_workflows\\\"],\\n        \\\"mind_map\\\": [\\\"mind_map\\\"]\\n    },\\n    \\\"principles\\\": {\\n        \\\"name\\\": \\\"string\\\",\\n        \\\"tags\\\": \\\"array\\\",\\n        \\\"priority\\\": \\\"string\\\",\\n        \\\"description\\\": \\\"string\\\",\\n        \\\"related_goals\\\": [\\\"goals\\\"],\\n        \\\"related_execution_logs\\\": [\\\"execution_logs\\\"],\\n        \\\"related_charter\\\": [\\\"charter_table\\\"],\\n        \\\"related_mind_map\\\": [\\\"mind_map\\\"],\\n        \\\"creation_date\\\": \\\"date\\\",\\n        \\\"last_updated\\\": \\\"timestamp\\\"\\n    }\\n}\\n\\n# Update Firestore documents with missing fields to ensure schema correctness\\nbatch = db.batch()\\n\\nfor collection, fields in schema_structure.items():\\n    docs = db.collection(collection).stream()\\n    for doc in docs:\\n        doc_ref = db.collection(collection).document(doc.id)\\n        existing_data = doc.to_dict()\\n\\n        # Add missing fields with default values\\n        for field, field_type in fields.items():\\n            if field not in existing_data:\\n                if field_type == \\\"string\\\":\\n                    existing_data[field] = \\\"N/A\\\"\\n                elif field_type == \\\"array\\\":\\n                    existing_data[field] = []\\n                elif field_type == \\\"date\\\" or field_type == \\\"timestamp\\\":\\n                    existing_data[field] = None\\n\\n        # Add update to batch operation\\n        batch.set(doc_ref, existing_data, merge=True)\\n\\n# Commit batch updates\\ntry:\\n    batch.commit()\\n    print(\\\"\u2705 Firestore schema updated successfully!\\\")\\nexcept Exception as e:\\n    print(f\\\"\u274c Firestore update failed: {str(e)}\\\")\"}"], "source": "ChatGPT", "timestamp": 1739747307.512821, "data_type": "conversation", "metadata": {"author": "assistant", "original_conversation_id": "67b1122d-39fc-8000-ad48-778439e25bee"}}