{"data_id": "67b1122d-39fc-8000-ad48-778439e25bee-af9385f7-a83d-4ec1-834e-25ffef470eda", "content": ["{\"name\": \"firestore_execution_listener\", \"type\": \"code/python\", \"content\": \"import firebase_admin\\nfrom firebase_admin import credentials, firestore\\nfrom flask import Flask, request, jsonify\\n\\n# Path to Firebase service account key JSON file\\nkey_file_path = r\\\"C:\\\\AI-Execution-System\\\\firebase_key.json\\\"\\n\\n# Initialize Firebase Admin SDK\\ncred = credentials.Certificate(key_file_path)\\nfirebase_admin.initialize_app(cred)\\n\\ndb = firestore.client()\\napp = Flask(__name__)\\n\\n# Route to update Firestore documents\\n@app.route('/update_document', methods=['POST'])\\ndef update_document():\\n    data = request.json\\n    collection_name = data.get(\\\"collection\\\")\\n    doc_id = data.get(\\\"doc_id\\\")\\n    update_data = data.get(\\\"update_data\\\")\\n    \\n    if not collection_name or not doc_id or not update_data:\\n        return jsonify({\\\"error\\\": \\\"collection, doc_id, and update_data are required\\\"}), 400\\n    \\n    try:\\n        doc_ref = db.collection(collection_name).document(doc_id)\\n        doc_ref.set(update_data, merge=True)\\n        return jsonify({\\\"success\\\": f\\\"Document {doc_id} updated successfully\\\"})\\n    except Exception as e:\\n        return jsonify({\\\"error\\\": str(e)}), 500\\n\\nif __name__ == '__main__':\\n    app.run(host='0.0.0.0', port=5001, debug=True)\"}"], "source": "ChatGPT", "timestamp": 1739747712.36192, "data_type": "conversation", "metadata": {"author": "assistant", "original_conversation_id": "67b1122d-39fc-8000-ad48-778439e25bee"}}