{
  "data_id": "0f311ece-733a-4aee-8da8-61564d638beb",
  "content": [
    "{\"textdoc_id\": \"dcf3b9d48eaf4e5dbe70e719ba4fd9eb\", \"updates\": [{\"pattern\": \".*\", \"multiple\": true, \"replacement\": \"import firebase_admin\\nfrom firebase_admin import credentials, firestore\\nfrom flask import Flask, request, jsonify\\n\\n# Path to Firebase service account key JSON file\\nkey_file_path = r\\\"C:\\\\AI-Execution-System\\\\firebase_key.json\\\"\\n\\n# Initialize Firebase Admin SDK\\ncred = credentials.Certificate(key_file_path)\\nfirebase_admin.initialize_app(cred)\\n\\ndb = firestore.client()\\napp = Flask(__name__)\\n\\n# Route to retrieve documents from a collection\\n@app.route('/get_documents', methods=['GET'])\\ndef get_documents():\\n    collection_name = request.args.get('collection')\\n    if not collection_name:\\n        return jsonify({\\\"error\\\": \\\"Collection name is required\\\"}), 400\\n    \\n    try:\\n        docs = db.collection(collection_name).stream()\\n        data = {doc.id: doc.to_dict() for doc in docs}\\n        return jsonify(data)\\n    except Exception as e:\\n        return jsonify({\\\"error\\\": str(e)}), 500\\n\\n# Route to update a document in Firestore\\n@app.route('/update_document', methods=['POST'])\\ndef update_document():\\n    data = request.json\\n    collection_name = data.get(\\\"collection\\\")\\n    doc_id = data.get(\\\"doc_id\\\")\\n    update_data = data.get(\\\"update_data\\\")\\n    \\n    if not collection_name or not doc_id or not update_data:\\n        return jsonify({\\\"error\\\": \\\"collection, doc_id, and update_data are required\\\"}), 400\\n    \\n    try:\\n        doc_ref = db.collection(collection_name).document(doc_id)\\n        doc_ref.set(update_data, merge=True)\\n        return jsonify({\\\"success\\\": f\\\"Document {doc_id} updated successfully\\\"})\\n    except Exception as e:\\n        return jsonify({\\\"error\\\": str(e)}), 500\\n\\nif __name__ == '__main__':\\n    app.run(host='0.0.0.0', port=5001, debug=True)\"}]}"
  ],
  "source": "chatgpt",
  "timestamp": 1739750362.209815,
  "data_type": "message",
  "metadata": {
    "author": "assistant"
  }
}