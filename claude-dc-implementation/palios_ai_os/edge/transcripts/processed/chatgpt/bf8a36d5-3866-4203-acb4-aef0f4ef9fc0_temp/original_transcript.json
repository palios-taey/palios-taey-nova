{
  "data_id": "bf8a36d5-3866-4203-acb4-aef0f4ef9fc0",
  "content": [
    "{\"name\": \"full_firestore_automation\", \"type\": \"code/python\", \"content\": \"import os\\nimport subprocess\\nimport time\\n\\ndef run_command(command):\\n    \\\"\\\"\\\"Run a command in the system shell.\\\"\\\"\\\"\\n    result = subprocess.run(command, shell=True, capture_output=True, text=True)\\n    print(result.stdout)\\n    print(result.stderr)\\n\\n# Step 1: Stop the execution listener\\nprint(\\\"\ud83d\ude80 Stopping Execution Listener...\\\")\\nrun_command(\\\"taskkill /F /IM python.exe\\\")\\n\\n# Step 2: Restart the execution listener\\nprint(\\\"\ud83d\ude80 Restarting Execution Listener...\\\")\\ntime.sleep(3)  # Wait to ensure all processes are stopped\\nrun_command(\\\"python C:\\\\\\\\AI-Execution-System\\\\\\\\firestore_execution_listener.py\\\")\\n\\n# Step 3: Validate Firestore Schema\\nprint(\\\"\ud83d\ude80 Validating Firestore Schema...\\\")\\nrun_command(\\\"curl -X GET \\\\\\\"http://127.0.0.1:5001/full_schema_validation\\\\\\\"\\\")\\n\\n# Step 4: Fix Firestore Schema (if required)\\nprint(\\\"\ud83d\ude80 Fixing Firestore Schema...\\\")\\nrun_command(\\\"curl -X POST http://127.0.0.1:5001/fix_schema\\\")\\n\\n# Step 5: Validate Schema Again After Fixing\\nprint(\\\"\ud83d\ude80 Re-validating Firestore Schema...\\\")\\nrun_command(\\\"curl -X GET \\\\\\\"http://127.0.0.1:5001/full_schema_validation\\\\\\\"\\\")\\n\\n# Step 6: Update Schema Documentation in Firestore\\nprint(\\\"\ud83d\ude80 Updating Firestore Schema Documentation...\\\")\\nrun_command(\\\"curl -X POST http://127.0.0.1:5001/update_schema_docs\\\")\\n\\nprint(\\\"\u2705 All Firestore tasks completed successfully!\\\")\"}"
  ],
  "source": "chatgpt",
  "timestamp": 1739756465.643265,
  "data_type": "message",
  "metadata": {
    "author": "assistant"
  }
}